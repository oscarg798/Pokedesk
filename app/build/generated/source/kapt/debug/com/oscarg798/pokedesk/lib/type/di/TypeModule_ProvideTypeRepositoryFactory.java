// Generated by Dagger (https://dagger.dev).
package com.oscarg798.pokedesk.lib.type.di;

import com.oscarg798.pokedesk.lib.type.TypeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TypeModule_ProvideTypeRepositoryFactory implements Factory<TypeService> {
  private final Provider<Retrofit> retrofitProvider;

  public TypeModule_ProvideTypeRepositoryFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public TypeService get() {
    return provideTypeRepository(retrofitProvider.get());
  }

  public static TypeModule_ProvideTypeRepositoryFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new TypeModule_ProvideTypeRepositoryFactory(retrofitProvider);
  }

  public static TypeService provideTypeRepository(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(TypeModule.INSTANCE.provideTypeRepository(retrofit));
  }
}
