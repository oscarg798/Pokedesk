// Generated by Dagger (https://dagger.dev).
package com.oscarg798.pokedesk.lib.network;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.Set;
import javax.inject.Provider;
import okhttp3.Interceptor;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<Set<Interceptor>> interceptorsProvider;

  public NetworkModule_ProvideHttpClientFactory(Provider<Set<Interceptor>> interceptorsProvider) {
    this.interceptorsProvider = interceptorsProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideHttpClient(interceptorsProvider.get());
  }

  public static NetworkModule_ProvideHttpClientFactory create(
      Provider<Set<Interceptor>> interceptorsProvider) {
    return new NetworkModule_ProvideHttpClientFactory(interceptorsProvider);
  }

  public static OkHttpClient provideHttpClient(Set<Interceptor> interceptors) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideHttpClient(interceptors));
  }
}
