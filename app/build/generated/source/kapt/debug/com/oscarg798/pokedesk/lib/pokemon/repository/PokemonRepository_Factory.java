// Generated by Dagger (https://dagger.dev).
package com.oscarg798.pokedesk.lib.pokemon.repository;

import com.google.gson.Gson;
import com.oscarg798.pokedesk.lib.pokemon.network.PokemonService;
import com.oscarg798.pokedesk.lib.pokemon.persistence.PokemonDao;
import com.oscarg798.pokedesk.lib.pokemon.persistence.StatsDao;
import com.oscarg798.pokedesk.lib.pokemon.persistence.TypeDao;
import com.oscarg798.pokedesk.lib.pokemon.utils.IdExtractor;
import com.oscarg798.pokedesk.lib.type.TypeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PokemonRepository_Factory implements Factory<PokemonRepository> {
  private final Provider<PokemonService> pokemonServiceProvider;

  private final Provider<TypeService> typeServiceProvider;

  private final Provider<IdExtractor> idExtractorProvider;

  private final Provider<PokemonDao> pokemonDaoProvider;

  private final Provider<TypeDao> typeDaoProvider;

  private final Provider<StatsDao> statsDaoProvider;

  private final Provider<Gson> gsonProvider;

  public PokemonRepository_Factory(Provider<PokemonService> pokemonServiceProvider,
      Provider<TypeService> typeServiceProvider, Provider<IdExtractor> idExtractorProvider,
      Provider<PokemonDao> pokemonDaoProvider, Provider<TypeDao> typeDaoProvider,
      Provider<StatsDao> statsDaoProvider, Provider<Gson> gsonProvider) {
    this.pokemonServiceProvider = pokemonServiceProvider;
    this.typeServiceProvider = typeServiceProvider;
    this.idExtractorProvider = idExtractorProvider;
    this.pokemonDaoProvider = pokemonDaoProvider;
    this.typeDaoProvider = typeDaoProvider;
    this.statsDaoProvider = statsDaoProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public PokemonRepository get() {
    return newInstance(pokemonServiceProvider.get(), typeServiceProvider.get(), idExtractorProvider.get(), pokemonDaoProvider.get(), typeDaoProvider.get(), statsDaoProvider.get(), gsonProvider.get());
  }

  public static PokemonRepository_Factory create(Provider<PokemonService> pokemonServiceProvider,
      Provider<TypeService> typeServiceProvider, Provider<IdExtractor> idExtractorProvider,
      Provider<PokemonDao> pokemonDaoProvider, Provider<TypeDao> typeDaoProvider,
      Provider<StatsDao> statsDaoProvider, Provider<Gson> gsonProvider) {
    return new PokemonRepository_Factory(pokemonServiceProvider, typeServiceProvider, idExtractorProvider, pokemonDaoProvider, typeDaoProvider, statsDaoProvider, gsonProvider);
  }

  public static PokemonRepository newInstance(PokemonService pokemonService,
      TypeService typeService, IdExtractor idExtractor, PokemonDao pokemonDao, TypeDao typeDao,
      StatsDao statsDao, Gson gson) {
    return new PokemonRepository(pokemonService, typeService, idExtractor, pokemonDao, typeDao, statsDao, gson);
  }
}
