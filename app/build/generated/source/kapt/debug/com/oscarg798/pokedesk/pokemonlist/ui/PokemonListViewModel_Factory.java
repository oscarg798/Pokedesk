// Generated by Dagger (https://dagger.dev).
package com.oscarg798.pokedesk.pokemonlist.ui;

import com.oscarg798.pokedesk.lib.definitions.CoroutineContextProvider;
import com.oscarg798.pokedesk.pokemonlist.usecase.FetchPokemons;
import com.oscarg798.pokedesk.pokemonlist.usecase.GetPokemonListItems;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PokemonListViewModel_Factory implements Factory<PokemonListViewModel> {
  private final Provider<GetPokemonListItems> getPokemonListItemsProvider;

  private final Provider<FetchPokemons> fetchPokemonsProvider;

  private final Provider<CoroutineContextProvider> coroutineContextProvider;

  public PokemonListViewModel_Factory(Provider<GetPokemonListItems> getPokemonListItemsProvider,
      Provider<FetchPokemons> fetchPokemonsProvider,
      Provider<CoroutineContextProvider> coroutineContextProvider) {
    this.getPokemonListItemsProvider = getPokemonListItemsProvider;
    this.fetchPokemonsProvider = fetchPokemonsProvider;
    this.coroutineContextProvider = coroutineContextProvider;
  }

  @Override
  public PokemonListViewModel get() {
    return newInstance(getPokemonListItemsProvider.get(), fetchPokemonsProvider.get(), coroutineContextProvider.get());
  }

  public static PokemonListViewModel_Factory create(
      Provider<GetPokemonListItems> getPokemonListItemsProvider,
      Provider<FetchPokemons> fetchPokemonsProvider,
      Provider<CoroutineContextProvider> coroutineContextProvider) {
    return new PokemonListViewModel_Factory(getPokemonListItemsProvider, fetchPokemonsProvider, coroutineContextProvider);
  }

  public static PokemonListViewModel newInstance(GetPokemonListItems getPokemonListItems,
      FetchPokemons fetchPokemons, CoroutineContextProvider coroutineContextProvider) {
    return new PokemonListViewModel(getPokemonListItems, fetchPokemons, coroutineContextProvider);
  }
}
